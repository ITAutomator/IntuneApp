"Name","Value","Comment"
"AppName","Remove Apps","(Required) Base package name (e.g 7zip) (Remove ! Character which hides sample apps)"
"AppVersion","109","(Optional) Package version. Whole numbers beginning with 100. Can be manually incremented but also autoincrements every time IntuneApp publish process detects a hash change. Not the same but similar to Intune product version. (e.g. 100 for 7zip-v100) (Recommended)"
"AppInstaller","ps1","(Required) winget,choco,exe,msi,ps1,cmd. If winget, choco is used, leave AppUninstallName blank unless you want to uninstall an additional app"
"AppInstallName","Uninstallers.ps1","(Required) winget appid (case sensitive) or choco appid or filename of .exe or .msi or .ps1 or .cmd (wildcard OK). See https://winstall.app or https://community.chocolatey.org/packages for package ids."
"AppInstallArgs","ARGS: -mode auto","(Optional) Prefix with ARGS: Installer arguments for msi,ps1,exe,cmd (for msi usually /quiet or /q /norestart) (for ps1 with multi param try -var1 xyz -var2 pdq named format, else entire value is first param )"
"AppDescription","Removes apps from the device.","(Required) Info for company portal"
"AppUninstallName","","(Optional) winget name or winget id (Use 'winget list' to show them) to detect/uninstall (also done prior to install). This is in addition to the normal choco,winget uninstall. This field is required for non-winget packages, unless customcode.ps1 is used, as it is the only way to detect an app"
"AppUninstallVersion","","(Optional) AddRemove Product version below which product is uninstalled. If AppUninstallName is blank use AppVersion numbers else use Winget numbers (e.g. 4.5.0). Detection: versions below this will not be considered Detected. Blank=Any version is considered a detection and later versions will not be installed. Set this to the same as AppVersion to trigger a re-install on all endpoints."
"AppUninstallProcess","","(Optional) Processes to end prior to uninstall. (e.g. Acrobat*) Show running names via powershell: get-process -Name Acrob*. Wildcards can be used"
"SystemOrUser","system","(Required) System to install as system, User to install as user"
"Publisher","IT Automator","(Required) Info for company portal"
"AppInstallerDownload1URL","","Enter a URL to download into install folder before installer starts. Can be a public share from Google Drive (drive.google.com). Zip files will be extracted automatically."
"AppInstallerDownload1Hash","","Enter the file hash (optional) PSH: gci *.zip | Get-FileHash -Algorithm SHA256 | Select-Object Hash, @{n=""File"";e={Split-Path $_.Path -Leaf}}"
"AppInstallerDownload2URL","",""
"AppInstallerDownload2Hash","",""
"RestartBehavior","allow","Allow Installer to Restart (Default is allow)"
"Developer","","Info for company portal"
"Owner","","Info for company portal"
"Notes","","Info for company portal"
"InformationURL","","Info for company portal"
"PrivacyURL","","Info for company portal"
"CompanyPortalFeaturedApp","FALSE","(Required) Company Portal Featured (Default is FALSE)"
"AvailableInCompanyPortal","TRUE","(Required) Company Portal Availability (Default is TRUE)"
"PublishToOrgGroup","TRUE","(Required) App will be pushed immediately to the PublishToGroup group from AppsPublish_OrgList.csv (as a required app). False means do not push app to that group. Independent of this, apps are always published to its own IntuneApp [appname] group (Default is FALSE)"
"CreateExcludeGroup","FALSE","(Optional) When app is published, create both Include and Exclude groups specific to the app. (Default is FALSE)"
"AppVar1","","Custom var useable by ps1 files"
"AppVar2","","Custom var useable by ps1 files"
"AppVar3","","Custom var useable by ps1 files"
"AppVar4","","Custom var useable by ps1 files"
"AppVar5","","Custom var useable by ps1 files"
